(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{534:function(e,t,o){"use strict";o.r(t);var v=o(11),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("上一节讲到组件渲染并生成 dom 然后塞入页面的过程为组件的挂载，当组件的"),o("code",[e._v("props")]),e._v("或者"),o("code",[e._v("state")]),e._v("改变时，会触发组件的更新。在更新阶段，会依次调用以下方法:")]),e._v(" "),o("ol",[o("li",[o("p",[o("code",[e._v("static getDerivedStateFromProps()")]),e._v("：和挂载阶段一样，用的场景不多")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("shouldComponentUpdate(nextProps,nextState)")]),e._v(":根据"),o("code",[e._v("shouldComponentUpdate")]),e._v("返回值来确定是否重新渲染，默认情况下状态改变即重新渲染。这个是性能优化点，实际项目中可以使用内置的"),o("code",[e._v("PureComponent")]),e._v("组件而不是手动编写"),o("code",[e._v("shouldComponentUpdate()")])])]),e._v(" "),o("li",[o("p",[o("code",[e._v("render()")]),e._v(":和挂载阶段一样，执行渲染会返回 jsx 对象")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("getSnapshotBeforeUpdate()")]),e._v(":在组件发生更改时从 原 dom 中获得一些信息，使用场景不多")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("componentDidUpdate()")]),e._v("：组件更新完毕，可以在此对 dom 进行操作")])])]),e._v(" "),o("p",[e._v("个人在实际开发中，用到"),o("code",[e._v("shouldComponentUpdate()")]),e._v("和"),o("code",[e._v("componentDidUpdate()")]),e._v("会比较多。前者用于性能的优化，可以阻止不必要的渲染，后者多用于更新后针对前后状态的变化做一些操作，如 ajax 请求等。")]),e._v(" "),o("h1",{attrs:{id:"react-组件卸载"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react-组件卸载"}},[e._v("#")]),e._v(" react 组件卸载")]),e._v(" "),o("p",[e._v("组件从 DOM 中移除时会调用："),o("code",[e._v("componentWillUnmount()")]),e._v(",这个方法一般执行必要的清理操作，如定时器，或者在"),o("code",[e._v("componentDidMount()")]),e._v("阶段创建的订阅等")]),e._v(" "),o("h1",{attrs:{id:"react-组件错误处理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react-组件错误处理"}},[e._v("#")]),e._v(" react 组件错误处理")]),e._v(" "),o("p",[e._v("react 组件在后代组件抛出错误时会执行:")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("getDerivedStateFromError()")])])]),e._v(" "),o("li",[o("p",[o("code",[e._v("componentDidCatch()")])])])]),e._v(" "),o("p",[e._v("一般可在错误捕获时做 UI 降级渲染，保证友好性")])])}),[],!1,null,null,null);t.default=_.exports}}]);