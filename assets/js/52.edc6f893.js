(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{611:function(t,e,s){"use strict";s.r(e);var a=s(19),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Git 中回滚代码的方式主要有两种，"),s("code",[t._v("reset")]),t._v(" 和 "),s("code",[t._v("revert")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" reset")]),t._v(" "),s("p",[s("code",[t._v("reset")]),t._v(" 的用法：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard commit_id\n")])])]),s("p",[t._v("其中 "),s("code",[t._v("commit_id")]),t._v(" 可以通过 "),s("code",[t._v("git log")]),t._v(" 获得。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git")]),t._v(" log\ncommit 20b5a3345a16f7de21207710d016614c2c2b2bbc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" develop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: tangkaiqiang "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("justforgit@163.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Mon Jul "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":38:05 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" +0800\n\n    version "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\ncommit e0bee30e87214367362a33ec05a759c0b4727f8c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin/develop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: tangkaiqiang "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("justforgit@163.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":48:47 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" +0800\n\n    content-type\n")])])]),s("p",[s("code",[t._v("git reset")]),t._v(" 可以直接选择 "),s("code",[t._v("commit_id")]),t._v(" 来回退到具体的版本，也可以用相对于当前版本的提交次数来回退。在 Git 中， HEAD 用来保存当前版本，上一个版本就是"),s("code",[t._v("HEAD^")]),t._v("，上上个版本就是"),s("code",[t._v("HEAD^^")]),t._v("，往上 100 个版本可以写成"),s("code",[t._v("HEAD~100")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^\n")])])]),s("p",[t._v("回滚代码只是影响本地代码的版本，而不会影响远程仓库中的代码，所以要"),s("code",[t._v("push")]),t._v("到远程仓库。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\nTo github.com:tkiddo/front-end-campus.git\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rejected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("        feat/rollback -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" feat/rollback "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("non-fast-forward"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nerror: failed to push some refs to "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git@github.com:tkiddo/front-end-campus.git'")]),t._v("\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e.g.\nhint: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git pull ...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" before pushing again.\nhint: See the "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Note about fast-forwards'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git push --help'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details.\n")])])]),s("p",[t._v("直接 push 会报错，原因是当前分支的最新提交落后于对应的远程分支，所以我们需要强行同步。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push -f\n")])])]),s("h2",{attrs:{id:"revert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#revert"}},[t._v("#")]),t._v(" revert")]),t._v(" "),s("p",[s("code",[t._v("reset")]),t._v("命令会放弃目标版本之后的所有提交，如果我们只需要将其中某一次的提交还原而不影响其后的提交，比如，现在有三次提交，分别是提交一，提交二，提交三，我们发现提交二有问题，需要回退，但不想提交三也放弃掉，这时候就需要用到"),s("code",[t._v("revert")]),t._v("。"),s("code",[t._v("revert")]),t._v("的用法：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert commit_id\n")])])]),s("p",[s("code",[t._v("revert")]),t._v("命令会重做目标版本，如果有冲突需要解决冲突后提交。")]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[s("code",[t._v("reset")]),t._v("和"),s("code",[t._v("revert")]),t._v("的区别在于是否保留目标版本之后的提交。")])])}),[],!1,null,null,null);e.default=r.exports}}]);